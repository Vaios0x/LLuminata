{
  "name": "lluminata",
  "version": "1.0.0",
  "description": "Plataforma educativa inclusiva con IA para comunidades indÃ­genas",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:analytics": "npx tsx scripts/test-analytics-components.ts",
    "test:unit": "jest --testPathPattern=tests/unit",
    "test:integration": "jest --testPathPattern=tests/integration",
    "test:e2e": "playwright test",
    "test:accessibility": "pa11y-ci",
    "test:a11y:ci": "pa11y-ci --config .pa11yci",
    "test:security": "npm audit && snyk test",
    "test:performance:lighthouse": "lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-report.json",
    "test:performance": "npm run test:performance:lighthouse",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e && npm run test:accessibility",
    "test:components": "jest --testPathPattern=tests/__tests__/components",
    "test:components:gamification": "jest --testPathPattern=tests/__tests__/components/gamification",
    "test:components:analytics": "jest --testPathPattern=tests/__tests__/components/analytics",
    "test:components:ai": "jest --testPathPattern=tests/__tests__/components/ai",
    "test:components:security": "jest --testPathPattern=tests/__tests__/components/security",
    "test:components:accessibility": "jest --testPathPattern=tests/__tests__/components/accessibility",
    "test:integration:gamification": "jest --testPathPattern=tests/__tests__/integration/gamification",
    "test:integration:analytics": "jest --testPathPattern=tests/__tests__/integration/analytics",
    "test:integration:ai": "jest --testPathPattern=tests/__tests__/integration/ai",
    "test:integration:security": "jest --testPathPattern=tests/__tests__/integration/security",
    "test:integration:accessibility": "jest --testPathPattern=tests/__tests__/integration/accessibility",
    "test:runner": "tsx tests/__tests__/test-runner.ts",
    "test:runner:all": "tsx tests/__tests__/test-runner.ts",
    "test:runner:category": "tsx tests/__tests__/test-runner.ts --category",
    "test:verify": "tsx scripts/verify-tests.ts",
    "type-check": "tsc --noEmit",
    "install:clean": "npm cache clean --force && rm -rf node_modules package-lock.json && npm install --legacy-peer-deps",
    "install:clean:win": "npm cache clean --force && if exist node_modules rmdir /s /q node_modules && if exist package-lock.json del package-lock.json && npm install --legacy-peer-deps",
    "build:clean": "npm run install:clean && npm run build",
    "build:clean:win": "npm run install:clean:win && npm run build",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:seed": "prisma db seed",
    "db:studio": "prisma studio",
    "db:reset": "prisma migrate reset",
    "db:migrate:deploy": "prisma migrate deploy",
    "db:migrate:postgresql": "tsx scripts/migrate-to-postgresql.ts",
    "docker:build": "docker build -t inclusive-ai-coach .",
    "docker:run": "docker run -p 3000:3000 inclusive-ai-coach",
    "docker:compose": "docker-compose up -d",
    "docker:compose:down": "docker-compose down",
    "docker:compose:prod": "docker-compose -f docker-compose.prod.yml up -d",
    "docker:compose:prod:down": "docker-compose -f docker-compose.prod.yml down",
    "deploy:staging": "npm run build && npm run start",
    "deploy:production": "npm run build && npm run start",
    "deploy:docker": "./scripts/deploy.sh",
    "deploy:docker:staging": "./scripts/deploy.sh staging",
    "deploy:docker:production": "./scripts/deploy.sh production",
    "monitor:performance": "node scripts/check-performance.ts",
    "monitor:health": "curl http://localhost:3000/api/health",
    "generate:offline": "node scripts/generate-offline.ts",
    "optimize:images": "node scripts/optimize-images.js",
    "setup:auth": "node scripts/setup-auth.js",
    "backup:db": "bash scripts/backup-postgresql.sh",
    "migrate:postgresql": "node scripts/migrate-to-postgresql.ts",
    "gamification:generate-data": "tsx scripts/generate-gamification-data.ts",
    "gamification:setup": "npm run db:migrate && npm run gamification:generate-data",
    "analytics:generate-data": "tsx scripts/generate-analytics-data.ts",
    "analytics:cleanup": "tsx scripts/generate-analytics-data.ts --cleanup",
    "analytics:setup": "npm run db:migrate && npm run analytics:generate-data",
    "analytics:check": "tsx scripts/check-performance.ts",
    "security:audit": "npm audit && snyk test",
    "security:fix": "npm audit fix",
    "security:update": "npm update",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "prepare": "husky install",
    "pre-commit": "lint-staged",
    "postinstall": "prisma generate"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.61.0",
    "@auth/prisma-adapter": "^2.10.0",
    "@prisma/client": "^5.10.0",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@tensorflow/tfjs": "^4.22.0",
    "@tensorflow/tfjs-backend-cpu": "^4.22.0",
    "@tensorflow/tfjs-backend-webgl": "^4.22.0",
    "@tensorflow/tfjs-layers": "^4.22.0",
    "@types/react-dom": "^18.2.0",
    "bcryptjs": "^3.0.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "critters": "^0.0.23",
    "date-fns": "^4.1.0",
    "framer-motion": "^12.23.12",
    "ioredis": "^5.3.2",
    "lodash": "^4.17.21",
    "lucide-react": "^0.542.0",
    "next": "^14.2.32",
    "next-auth": "^4.24.5",
    "nodemailer": "^6.9.8",
    "openai": "^4.28.0",
    "postcss": "^8.4.35",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "recharts": "^3.1.2",
    "sharp": "^0.34.3",
    "socket.io-client": "^4.8.1",
    "tailwind-merge": "^2.6.0",
    "tailwindcss": "^3.4.1",
    "tailwindcss-animate": "^1.0.7",
    "twilio": "^4.20.1",
    "web-push": "^3.6.6",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@playwright/test": "^1.41.0",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/aria-query": "^5.0.4",
    "@types/babel__core": "^7.20.5",
    "@types/bcryptjs": "^2.4.6",
    "@types/d3-array": "^3.2.1",
    "@types/jest": "^29.5.14",
    "@types/node": "^24.3.0",
    "@types/nodemailer": "^6.4.14",
    "@types/react": "^19.1.12",
    "@types/web-push": "^3.6.4",
    "@typescript-eslint/eslint-plugin": "^8.43.0",
    "@typescript-eslint/parser": "^8.43.0",
    "autoprefixer": "^10.4.21",
    "cssnano": "^7.1.1",
    "eslint": "^8.56.0",
    "eslint-config-next": "^14.1.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-extended": "^6.0.0",
    "msw": "^2.11.0",
    "pa11y-ci": "^4.0.1",
    "playwright": "^1.41.0",
    "prisma": "^5.10.0",
    "typescript": "^5.3.3",
    "whatwg-fetch": "^3.6.20"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "keywords": [
    "education",
    "ai",
    "inclusive",
    "indigenous",
    "accessibility",
    "nextjs",
    "typescript",
    "tensorflow",
    "notifications"
  ],
  "author": "LLuminata Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/lluminata/lluminata"
  },
  "bugs": {
    "url": "https://github.com/lluminata/lluminata/issues"
  },
  "homepage": "https://lluminata.com"
}
